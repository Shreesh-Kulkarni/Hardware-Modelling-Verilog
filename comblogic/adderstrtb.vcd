$date
	Sat Jun 10 20:27:50 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adderstrtb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module DUT $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 1 ( t3 $end
$var wire 1 ) t2 $end
$var wire 1 * t1 $end
$var wire 4 + sum [3:0] $end
$var wire 1 " cout $end
$scope module fa1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % cin $end
$var wire 1 * cout $end
$var wire 1 . sum $end
$var wire 1 / t1 $end
$var wire 1 0 t2 $end
$var wire 1 1 t3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 4 sum $end
$var wire 1 5 t1 $end
$var wire 1 6 t2 $end
$var wire 1 7 t3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 ) cin $end
$var wire 1 ( cout $end
$var wire 1 : sum $end
$var wire 1 ; t1 $end
$var wire 1 < t2 $end
$var wire 1 = t3 $end
$upscope $end
$scope module fa4 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 ( cin $end
$var wire 1 " cout $end
$var wire 1 @ sum $end
$var wire 1 A t1 $end
$var wire 1 B t2 $end
$var wire 1 C t3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
bx +
x*
x)
x(
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#5
0@
0(
1:
0<
0)
0.
b110 !
b110 +
14
06
0B
1"
0*
0/
01
15
07
1;
0=
0A
1C
00
0-
03
19
1?
0,
12
08
1>
0%
b1100 $
b1100 '
b1010 #
b1010 &
#10
1B
1(
0:
1<
04
1)
0@
1"
05
17
1A
0C
b1 !
b1 +
1.
13
0>
1%
b1110 $
b1110 '
b10 #
b10 &
#15
14
1*
1:
0<
1@
0B
11
0;
1=
0A
1C
b1110 !
b1110 +
0.
1-
1,
18
1>
0%
b1111 $
b1111 '
b1111 #
b1111 &
#20
0@
0)
1:
0<
0(
07
1;
0=
b111 !
b111 +
1.
03
02
08
1%
b1101 $
b1101 '
b1001 #
b1001 &
#25
