$date
	Mon Sep 11 19:50:23 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adderstrtb $end
$var wire 3 ! sum [2:0] $end
$var wire 1 " cout $end
$var reg 3 # a [2:0] $end
$var reg 3 $ b [2:0] $end
$var reg 1 % cin $end
$scope module DUT $end
$var wire 3 & a [2:0] $end
$var wire 3 ' b [2:0] $end
$var wire 1 % cin $end
$var wire 1 ( t2 $end
$var wire 1 ) t1 $end
$var wire 3 * sum [2:0] $end
$var wire 1 " cout $end
$scope module fa1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 % cin $end
$var wire 1 ) cout $end
$var wire 1 - sum $end
$var wire 1 . t1 $end
$var wire 1 / t2 $end
$var wire 1 0 t3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 ) cin $end
$var wire 1 ( cout $end
$var wire 1 3 sum $end
$var wire 1 4 t1 $end
$var wire 1 5 t2 $end
$var wire 1 6 t3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 ( cin $end
$var wire 1 " cout $end
$var wire 1 9 sum $end
$var wire 1 : t1 $end
$var wire 1 ; t2 $end
$var wire 1 < t3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
b0 *
0)
0(
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#5
13
1)
10
b11 !
b11 *
1-
1,
1+
1%
b1 $
b1 '
b1 #
b1 &
#10
03
19
0)
1(
00
16
b100 !
b100 *
0-
0,
12
0+
11
0%
b10 $
b10 '
b10 #
b10 &
#15
13
1)
10
b111 !
b111 *
1-
1,
1+
1%
b11 $
b11 '
b11 #
b11 &
#20
03
09
0)
0(
1"
00
06
1<
b0 !
b0 *
0-
0,
02
18
0+
01
17
0%
b100 $
b100 '
b100 #
b100 &
#25
13
1)
10
b11 !
b11 *
1-
1,
1+
1%
b101 $
b101 '
b101 #
b101 &
#30
03
19
0)
1(
00
16
b100 !
b100 *
0-
0,
12
0+
11
0%
b110 $
b110 '
b110 #
b110 &
#35
13
1)
10
b111 !
b111 *
1-
1,
1+
1%
b111 $
b111 '
b111 #
b111 &
#40
03
09
0)
0(
0"
00
06
0<
b0 !
b0 *
0-
0,
02
08
0+
01
07
0%
b0 $
b0 '
b0 #
b0 &
#45
13
1)
10
b11 !
b11 *
1-
1,
1+
1%
b1 $
b1 '
b1 #
b1 &
#50
03
19
0)
1(
00
16
b100 !
b100 *
0-
0,
12
0+
11
0%
b10 $
b10 '
b10 #
b10 &
