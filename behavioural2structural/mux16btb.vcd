$date
	Fri Mar 10 11:19:40 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux16btb $end
$var wire 1 ! O $end
$var reg 16 " A [15:0] $end
$var reg 4 # B [3:0] $end
$scope module M $end
$var wire 16 $ in [15:0] $end
$var wire 4 % sel [3:0] $end
$var wire 4 & t [3:0] $end
$var wire 1 ! out $end
$scope module M1 $end
$var wire 4 ' in [3:0] $end
$var wire 2 ( sel [1:0] $end
$var wire 1 ) out $end
$upscope $end
$scope module M2 $end
$var wire 4 * in [3:0] $end
$var wire 2 + sel [1:0] $end
$var wire 1 , out $end
$upscope $end
$scope module M3 $end
$var wire 4 - in [3:0] $end
$var wire 2 . sel [1:0] $end
$var wire 1 / out $end
$upscope $end
$scope module M4 $end
$var wire 4 0 in [3:0] $end
$var wire 2 1 sel [1:0] $end
$var wire 1 2 out $end
$upscope $end
$scope module M5 $end
$var wire 4 3 in [3:0] $end
$var wire 2 4 sel [1:0] $end
$var wire 1 ! out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 4
bx 3
x2
bx 1
bx 0
x/
bx .
bx -
x,
bx +
bx *
x)
bx (
bx '
bx &
bx %
bx $
bx #
bx "
x!
$end
#5
0!
0)
b0 (
0,
b0 +
0/
b0 .
b0 &
b0 3
02
b0 1
b0 4
b0 '
b0 *
b10 -
b1100 0
b0 #
b0 %
b1100001000000000 "
b1100001000000000 $
#10
b1 (
b1 +
1!
b100 &
b100 3
1/
b1 .
b1 1
b10 4
b1001 #
b1001 %
#15
b10 (
b10 +
0/
b10 .
b1000 &
b1000 3
12
b10 1
1!
b11 4
b1110 #
b1110 %
#20
b11 (
b11 +
b11 .
b11 1
b1111 #
b1111 %
#25
b10 (
b10 +
b10 .
b10 1
0!
b10 4
b1010 #
b1010 %
#30
